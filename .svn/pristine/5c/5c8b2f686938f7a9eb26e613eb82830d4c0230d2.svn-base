<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="
  		http://www.springframework.org/schema/beans 
  		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">  
  
  <!-- 零、引入database.properties -->
  <context:property-placeholder location="classpath:database.properties"/>
  
  <!-- 一、Mybatis配置dbcp数据源,此前用的POOLED与JNDI -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
  		destroy-method="close"
  		p:driverClassName="${jdbc.driver}"
  		p:url="${jdbc.url}"
  		p:username="${jdbc.username}"
  		p:password="${jdbc.password}">
  </bean>
  <!-- 二、Mybatis配置SqlSessionFactory对象 -->
   	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource"/>
  		<property name="configLocation" value="classpath:mybatis-config.xml"/>
  		<!-- <property name="mapperLocations">
  			<list>
  			<value>classpath:com/easybuy/dao/**/*.xml</value>
  			</list>
  		</property> -->
  	</bean>
  <!-- TODO 引用Mapper.xml映射文件在分模块配置文件中设置 -->
 	
  <!-- 三、TODO MapperScanner扫描mapper.xml所在的包，生成Mapper实现类，在分模块配置文件中设置  -->
  	
  <!-- 四、Spring配置开启扫描 -->
  <!-- 1、TODO 开启IOC扫描，此处仅扫描aop、entity所在的包 -->
  <context:component-scan base-package="com.easybuy.aop,com.easybuy.entity" />  
  <!-- 2、开启对AOP注解驱动 -->
  <aop:aspectj-autoproxy />
  <!-- 3、开启事务注解驱动 -->
  <tx:annotation-driven transaction-manager="txManager" />
  <!-- 五、Spring事务管理 -->  
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource"></property>
  </bean>
    
  <!-- 六、导入分模块配置文件 -->
  <import resource="user/applicationContext-public.xml"/>
  <import resource="order/applicationContext-public.xml"/>
  <import resource="product/applicationContext-public.xml"/>
  <import resource="category/applicationContext-public.xml"/>
  <import resource="news/applicationContext-public.xml"/>
  
</beans> 